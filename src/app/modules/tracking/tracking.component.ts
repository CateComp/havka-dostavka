<<<<<<< HEAD
import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';
// import { Observable } from 'rxjs';
import { interval, Observable } from 'rxjs';
import { takeWhile } from 'rxjs/operators';
import { FirebaseService } from 'app/core/services/firebase.service';
import { Subscription } from 'rxjs';
import { Way, point } from 'app/core/interfaces/tracking';
import { AngularFirestore } from '@angular/fire/firestore';
// import { of as observableOf } from 'rxjs'
=======
import { Component, OnInit } from '@angular/core';
import { LocalStorageService } from 'app/core/services/local-storage.service'
import { MapCoords, DefaultMapPos } from 'app/core/interfaces/map-coords';
import { DataMapService } from 'app/core/services/data-map.service';
>>>>>>> d411eb0... added tracking

@Component({
  selector: 'app-tracking',
  templateUrl: './tracking.component.html',
  styleUrls: ['./tracking.component.scss']
})
<<<<<<< HEAD


export class TrackingComponent implements OnInit, OnDestroy, AfterViewInit {

  public coord2: string;
  public coord: string;
  public currentWay: Way[] = [];
  private subscription: Subscription;
  public tracking: Observable<Way>[];
  public currentPos: point = {
    lat: 49.843151,
    lng: 24.026744 
  };

  constructor(private firebaseServise: FirebaseService, private afs: AngularFirestore) {
    this.afs.collection<Way>('tracking').snapshotChanges()
      .subscribe(El=>{this.coord2 = El[0].payload.doc.data().way2; this.first()});
    this.afs.collection<Way>('tracking').snapshotChanges()
      .subscribe(El=>this.coord = El[0].payload.doc.data().way1);
  }

  public icon = 'assets/pictures/dot-11.png';

  public visible: boolean = true;
  public zoom: number = 13;

  // coord: string = "49.8310898 23.9709449 49.83112 23.97109 49.83115 23.9713 49.83121 23.97165 49.83131 23.97216 49.83143 23.97286 49.83146 23.97302 49.8315 23.97325 49.83152 23.97333 49.83153 23.97339 49.83158 23.9737 49.83166 23.97411 49.83179 23.97485 49.83182 23.97502 49.83201 23.97612 49.83204 23.97626 49.83219 23.97711 49.83222 23.97727 49.83224 23.97736 49.83237 23.97817 49.83267 23.97989 49.8328 23.98053 49.83296 23.9815 49.83305 23.98201 49.83323 23.98297 49.83333 23.98348 49.83341 23.98391 49.83356 23.98475 49.83387 23.9865 49.83397 23.98703 49.83413 23.98787 49.83427 23.98862 49.83463 23.99081 49.83464 23.99087 49.83476 23.99147 49.83502 23.99293 49.83517 23.99378 49.8352 23.99393 49.83527 23.99428 49.83473 23.99459 49.83405 23.99501 49.83349 23.99534 49.8332 23.99551 49.833 23.99563 49.83287 23.9957 49.83233 23.99602 49.8323568 23.9961102 49.83233 23.99602 49.83151 23.99654 49.83129 23.99667 49.83108 23.9968 49.83091 23.99638 49.83028 23.99502 49.83006 23.99453 49.8305 23.99405 49.83095 23.99358 49.83134 23.99324 49.8316 23.99311 49.83221 23.9927 49.83229 23.99264 49.83284 23.99227 49.83288 23.99224 49.83387 23.99162 49.83404 23.99152 49.83423 23.99139 49.83426 23.99136 49.8343 23.99132 49.83433 23.99127 49.83434 23.99122 49.83436 23.99115 49.83436 23.9911 49.83437 23.99103 49.83437 23.99096 49.83437 23.99089 49.83464 23.99087 49.83476 23.99147 49.83502 23.99293 49.83517 23.99378 49.8352 23.99393 49.83527 23.99428 49.83532 23.99457 49.83549 23.9956 49.83551 23.99572 49.83566 23.99653 49.83574 23.99696 49.83587 23.99764 49.836 23.99835 49.83602 23.99848 49.8361 23.99891 49.83636 24.00038 49.83646 24.00096 49.83666 24.00205 49.83672 24.00235 49.83675 24.00237 49.83676 24.00238 49.83677 24.00239 49.83678 24.00239 49.8369 24.00248 49.83695 24.00251 49.83703 24.00246 49.83714 24.00237 49.83738 24.00214 49.83764 24.0019 49.83813 24.00144 49.83837 24.00121 49.83866 24.00093 49.83897 24.00063 49.83901 24.00058 49.83954 24.00004 49.8398 23.99978 49.83998 23.99962 49.84016 23.99946 49.84029 23.99938 49.84043 23.99928 49.84066 23.99915 49.84122 23.99881 49.84171 23.99853 49.84293 23.99779 49.8429 23.9987 49.84283 24 49.842733 24.001134 49.8427134 24.0013729 49.84265 24.00213 49.84258 24.00335 49.84254 24.00462 49.84253 24.0047 49.84385 24.00479 49.84415 24.00482 49.84432 24.00487 49.8446 24.00498 49.8451 24.00518 49.84538 24.00529 49.84552 24.00534 49.84558 24.00536 49.84567 24.00537 49.84573 24.00537 49.84579 24.00537 49.84586 24.00582 49.8459 24.00607 49.84593 24.00621 49.84597 24.00638 49.84601 24.00652 49.84627 24.00592 49.84671 24.00486 49.84673 24.00479 49.84675 24.00473 49.84679 24.00454 49.84685 24.00419 49.84686 24.00414 49.847 24.00332 49.84706 24.00306 49.84715 24.00277 49.84729 24.00238 49.84756 24.0017 49.8477 24.00134 49.84782 24.00099 49.84794 24.00059 49.84825 23.99934 49.84833 23.99906 49.84862 23.99802 49.84889 23.99712 49.84927 23.99594 49.84939 23.9956 49.84949 23.99533 49.84964 23.99494 49.85003 23.99399 49.85047 23.99303 49.85091 23.99204 49.851 23.99185 49.8510531 23.9917178";
  // coord2: string = "49.8310832 23.9708993 49.8309 23.96985 49.83063 23.96828 49.83039 23.96827 49.83008 23.96824 49.82881 23.96812 49.82785 23.968 49.82673 23.96788 49.82655 23.96786 49.82607 23.96782 49.82594 23.9678 49.825 23.96768 49.82488 23.96766 49.82462 23.96763 49.82427 23.96759 49.82399 23.96757 49.82381 23.96755 49.82307 23.9675 49.82283 23.96749 49.8227 23.96749 49.82259 23.9675 49.82246 23.96755 49.82232 23.96762 49.82215 23.96772 49.82196 23.96786 49.82177 23.96802 49.82114 23.96855 49.82098 23.96869 49.82066 23.96897 49.8204 23.96918 49.81988 23.96959 49.81886 23.97044 49.81727 23.97176 49.81719 23.97183 49.81711 23.97186 49.81704 23.97194 49.81671 23.97222 49.81635 23.97254 49.81616 23.97274 49.81583 23.97315 49.81569 23.97334 49.81555 23.97354 49.81524 23.97403 49.81394 23.97612 49.8139 23.97618 49.81386 23.97625 49.81378 23.97638 49.81367 23.97659 49.8135 23.97694 49.81332 23.9773 49.81313 23.97774 49.81301 23.97807 49.81294 23.97829 49.8127 23.97909 49.81257 23.97964 49.81244 23.98027 49.81233 23.98096 49.81228 23.98136 49.81224 23.98154 49.81222 23.98166 49.81217 23.98225 49.8121 23.98269 49.81204 23.98302 49.81202 23.98313 49.81188 23.98352 49.81186 23.98353 49.81183 23.98355 49.8118 23.98359 49.81176 23.98365 49.81173 23.98372 49.8117 23.98379 49.81168 23.98385 49.81168 23.98389 49.81167 23.98393 49.81167 23.98401 49.81167 23.98414 49.8117 23.98424 49.81172 23.9843 49.81174 23.98435 49.81179 23.98446 49.81186 23.98491 49.8119 23.98518 49.81189 23.98524 49.81186 23.98552 49.81182 23.9859 49.81181 23.98603 49.81176 23.98653 49.81171 23.98704 49.81167 23.9874 49.81165 23.98753 49.81164 23.98766 49.81162 23.98766 49.8114325 23.9876419 49.8116429 23.9876641 49.81156 23.98858 49.81152 23.98893 49.81149 23.98927 49.81122 23.9892 49.81094 23.98914 49.81093 23.98914 49.81072 23.98909 49.81055 23.98905 49.81049 23.98904 49.81042 23.98902 49.81035 23.98899 49.81028 23.98896 49.8102 23.98893 49.81012 23.98888 49.81003 23.98881 49.80993 23.98873 49.80981 23.98864 49.80964 23.98849 49.80922 23.98811 49.80915 23.98804 49.80903 23.98794 49.80896 23.98788 49.80889 23.98782 49.80881 23.98775 49.80871 23.98768 49.80857 23.98757 49.80853 23.98754 49.80848 23.9875 49.80842 23.98747 49.80835 23.98743 49.8083 23.98741 49.80819 23.98738 49.80809 23.98735 49.80797 23.98732 49.80784 23.98729 49.80666 23.98699 49.80642 23.98693 49.80597 23.98681 49.80563 23.98672 49.80542 23.98665 49.8053 23.98662 49.80518 23.9866 49.80502 23.98656 49.8048 23.9888 49.80475 23.9893 49.80443 23.99225 49.80428 23.99377 49.80411 23.9956 49.80409 23.99576 49.80388 23.99777 49.80386 23.99798 49.80383 23.9982 49.80381 23.99841 49.8038 23.99849 49.8036304 24.00015 49.8035574 24.0008351 49.8034 24.00231 49.80338 24.00247 49.80321 24.00415 49.80313 24.00493 49.80306 24.00556 49.80302 24.00604 49.80299 24.00635 49.80275 24.00879 49.80271 24.00923 49.80259 24.01053 49.8025 24.01133 49.80221 24.01417 49.80213 24.01487 49.80217 24.01499 49.8022 24.01507 49.80214 24.01561 49.80197 24.0175 49.80196 24.01763 49.80194 24.01789 49.80192 24.01812 49.80217 24.0181 49.80221 24.01811 49.80254 24.01819 49.80323 24.01835 49.80437 24.0186 49.80448 24.01864 49.80513 24.01877 49.8053 24.01881 49.80553 24.01886 49.80577 24.01892 49.80597 24.01896 49.80612 24.01899 49.8062 24.019 49.80635 24.01901 49.80688 24.01906 49.80732 24.01911 49.80756 24.01912 49.80792 24.01916 49.80813 24.01918 49.80828 24.01919 49.80871 24.01925 49.8097 24.01935 49.81002 24.01939 49.81051 24.01944 49.81103 24.0195 49.81125 24.01952 49.81148 24.01954 49.81161 24.01955 49.81172 24.01957 49.81175 24.01957 49.81203 24.01959 49.81204 24.01963 49.81204 24.01964 49.81205 24.01966 49.81207 24.01967 49.81208 24.01968 49.8121 24.01968 49.81221 24.01969 49.81223 24.0197 49.81224 24.01971 49.81227 24.01973 49.81229 24.01975 49.8123 24.01977 49.81232 24.01981 49.81233 24.01984 49.81234 24.01987 49.81234 24.01989 49.81234 24.01993 49.81233 24.02015 49.81224 24.02048 49.81219 24.02065 49.8121 24.0207 49.81204 24.02073 49.81201 24.02073 49.81197 24.02072 49.81191 24.02068 49.81188 24.02065 49.81185 24.02061 49.81178 24.02046 49.81188 24.01987 49.81202 24.01899 49.81212 24.0186 49.81216 24.01847 49.81225 24.0182 49.81241 24.01792 49.81255 24.0176 49.81251 24.01749 49.8125 24.01743 49.81246 24.01738 49.81243 24.01736 49.81238 24.01734 49.81236 24.01734 49.81233 24.01735 49.81231 24.01735 49.81229 24.01736 49.81227 24.01737 49.81225 24.01738 49.81224 24.0174 49.81222 24.01741 49.81219 24.01748 49.81214 24.01763 49.8121 24.01779 49.81199 24.01842 49.81192 24.01873 49.81176 24.0197 49.81158 24.02071 49.81139 24.02183 49.81087 24.02495 49.81071 24.02573 49.81059 24.02657 49.81051 24.02694 49.8103 24.02815 49.81014 24.02917 49.80977 24.03123 49.80966 24.03195 49.80956 24.03256 49.80938 24.0337 49.80932 24.03411 49.80917 24.0351 49.80882 24.03732 49.8085 24.03936 49.80831 24.04068 49.80823 24.0413 49.80852 24.04135 49.80853 24.04135 49.80854 24.04135 49.80854 24.04136 49.80855 24.04137 49.80855 24.04138 49.80855 24.0414 49.80855 24.04147 49.80855 24.0416 49.80856 24.04171 49.80857 24.04176 49.80858 24.04179 49.8086 24.0418 49.80865 24.04184 49.80884 24.04197 49.80921 24.04226 49.80912 24.04265 49.80906 24.04306 49.809 24.04355 49.80892 24.0447 49.80891 24.04474 49.8089 24.04477 49.80889 24.04478 49.80888 24.04478 49.8088732 24.0447871";

  public coordSplit: any[] = [];
  public arr: any[] = [];
  public len: number;

  public points: point[] = [];
  public polyline: point[] = [];
  public deliveryPlace: point[] = [];
  public customeruOrderTrue = false;

  ngOnInit(): void {
  }
  public ngAfterViewInit(): void {
  //  this.first(); 
  }
  public ngOnDestroy(): void {
    this.subscription.unsubscribe();
  }


  public first(): void {
    //  make new array
    this.arr = [];
    this.coordSplit = this.coord2.split(" ");
    this.len = this.coordSplit.length;
    for (let i = 0; i < this.len; i = i + 2) {
      this.arr.push({
        lat: Number(this.coordSplit[i]),
        lng: Number(this.coordSplit[i+1])
      });
    }
    console.log(this.arr);
    // delivery place
    this.polyline.push(this.arr[this.arr.length-1]);
    // add of making new array

    // console.log(this.coord);
    this.customeruOrderTrue = true;
    let i = 0;
    const intervalObs = interval(1000);
    this.subscription = intervalObs.pipe(
      takeWhile((v) =>  i < this.arr.length)
    )
    .subscribe(() => {
      const pos = this.arr[i];
      this.points.push(pos);
      this.polyline = this.arr.slice(i-1, this.arr.length);
      this.polyline.shift();
      console.log(this.polyline);
      if (this.points.length > 1) {
        this.points.shift();
      }
      i++;
    })
    this.deliveryPlace.push(this.polyline[this.polyline.length-1]);
  }
=======
export class TrackingComponent implements OnInit {
  coords: MapCoords[];
  public currentPos: DefaultMapPos = {
    lat: 49.843151,
    lng: 24.026744
  };
  public zoom: number = 13;
  public icon: string = "assets/pictures/marker.png";
  public lat: number;
  public lng: number;
  public currentIndex: number = this.ls.get('currentIndex');
  public deliveryPlaceLat: number;
  public deliveryPlaceLng: number;
  constructor(
    private ls: LocalStorageService,
    private dataMap: DataMapService
  ) { }
  public coordsUrl: string = this.ls.get('way')
  public polyline: any[];
  public startWay(coordsUrl) {
    console.log('hello')
    this.dataMap.getPoints(coordsUrl)
      .subscribe((data) => {
        this.polyline = data
        console.log(this.polyline[this.polyline.length - 1].lat)
        this.deliveryPlaceLat = this.polyline[this.polyline.length - 1].lat;
        this.deliveryPlaceLng = this.polyline[this.polyline.length - 1].lng;
      })
    this.dataMap.getCurrentPoint(1000, coordsUrl)
      .subscribe((data) => {
        console.log(data)
        this.lat = data.lat
        this.lng = data.lng
      })
  }
  public ngOnInit() {
    if (this.currentIndex) {
      this.startWay(this.coordsUrl)
    }
  }
>>>>>>> d411eb0... added tracking
}